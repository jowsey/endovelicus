using System.Collections.Generic;
using System.Linq;
using ElRaccoone.Tweens;
using UnityEngine;
using UnityEngine.AddressableAssets;
using UnityEngine.UI;

public class StatisticCounterList : MonoBehaviour
{
    private readonly List<StatisticCounterItem> items = new List<StatisticCounterItem>();

    public Image paymentCountdownBar;

    private void Awake()
    {
        MapManager.instance.onFinishedLoading.AddListener(() =>
        {
            // Animate payment counter filling forever
            var rt = paymentCountdownBar.rectTransform;
            gameObject.TweenValueFloat(rt.sizeDelta.x, 5f, (value) =>
            {
                rt.sizeDelta = new Vector2(value, rt.sizeDelta.y);
            }).SetInfinite();
        });
    }

    // Add a counter to the list
    public StatisticCounterItem RegisterStatistic(string id, Sprite icon, int count = 0)
    {
        if (GetStatistic(id) != null) return GetStatistic(id);

        var item = Addressables.InstantiateAsync("Prefabs/UI/StatisticCounterItem", transform)
            .WaitForCompletion()
            .GetComponent<StatisticCounterItem>();

        item.Id = id;
        item.Icon = icon;
        item.Count = count;

        item.tooltipTrigger.header = id switch
        {
            "gold" => "Gold",
            "devotion" => "Devotion",
            _ => ""
        };

        item.tooltipTrigger.body = id switch
        {
            "gold" => "Generated by houses in villages. It's mainly used for building towers, and represents your army's funds.",
            "devotion" => "Generated by churches in villages. It's mainly used for casting spells, and represents your army's devotion to you.",
            _ => ""
        };

        items.Add(item);
        return item;
    }

    // Return a statistic
    public StatisticCounterItem GetStatistic(string id)
    {
        return items.FirstOrDefault(x => x.Id == id);
    }

    // Remove a statistic
    public void RemoveStatistic(string id)
    {
        var item = GetStatistic(id);
        if (item == null) return;

        items.Remove(item);
        Destroy(item.gameObject);
    }
}
